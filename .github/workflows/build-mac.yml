name: Build macOS App

on:
  push:
    tags:
      - 'v*' # 当推送版本标签时触发
  workflow_dispatch:
    inputs:
      version:
        description: '版本号'
        required: true
        default: '1.0.7'

# 添加权限设置
permissions:
  contents: write
  packages: read

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install corepack
        run: corepack enable && corepack prepare yarn@4.6.0 --activate

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: Cache yarn dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install

      - name: Update version in package.json
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            # 从标签名称中提取版本号（去除 'v' 前缀）
            VERSION="${GITHUB_REF#refs/tags/v}"
          fi
          # 更新 package.json 中的版本号
          node -e "const fs = require('fs'); const pkg = JSON.parse(fs.readFileSync('package.json')); pkg.version = '${VERSION}'; fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2) + '\n');"
          echo "当前版本: ${VERSION}"

      - name: Build macOS App
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn build:mac
        
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: |
            dist/*.dmg
            dist/*.zip
            dist/latest*.yml
          if-no-files-found: warn

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.dmg
            dist/*.zip
            dist/latest*.yml
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
